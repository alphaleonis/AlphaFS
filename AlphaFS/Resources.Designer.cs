//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alphaleonis.Win32 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Alphaleonis.Win32.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be a drive letter from a-z, a volume GUID or device path..
        /// </summary>
        internal static string Argument_must_be_DriveLetter_or_VolumeGuid_or_DevicePath {
            get {
                return ResourceManager.GetString("Argument_must_be_DriveLetter_or_VolumeGuid_or_DevicePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer is not large enough for the requested operation..
        /// </summary>
        internal static string Buffer_Not_Large_Enough {
            get {
                return ResourceManager.GetString("Buffer_Not_Large_Enough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create directory..
        /// </summary>
        internal static string Cannot_Create_Directory {
            get {
                return ResourceManager.GetString("Cannot_Create_Directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot determine Copy or Move action..
        /// </summary>
        internal static string Cannot_Determine_Copy_Or_Move {
            get {
                return ResourceManager.GetString("Cannot_Determine_Copy_Or_Move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination buffer not large enough for the requested operation..
        /// </summary>
        internal static string Destination_Buffer_Not_Large_Enough {
            get {
                return ResourceManager.GetString("Destination_Buffer_Not_Large_Enough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory is not a mount point: [{0}].
        /// </summary>
        internal static string Directory_Is_Not_A_MountPoint {
            get {
                return ResourceManager.GetString("Directory_Is_Not_A_MountPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrectly implemented function attempting to generate exception from successful operation.
        ///.
        /// </summary>
        internal static string Exception_From_Successful_Operation {
            get {
                return ResourceManager.GetString("Exception_From_Successful_Operation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file is hidden: [{0}].
        /// </summary>
        internal static string File_Is_Hidden {
            get {
                return ResourceManager.GetString("File_Is_Hidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file or directory already exists.
        /// </summary>
        internal static string File_Or_Directory_Already_Exists {
            get {
                return ResourceManager.GetString("File_Or_Directory_Already_Exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get the current WindowsIdentity..
        /// </summary>
        internal static string GetCurrentWindowsIdentityFailed {
            get {
                return ResourceManager.GetString("GetCurrentWindowsIdentityFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add and remove trailing DirectorySeparator simultaneously..
        /// </summary>
        internal static string GetFullPathOptions_Add_And_Remove_DirectorySeparator_Invalid {
            get {
                return ResourceManager.GetString("GetFullPathOptions_Add_And_Remove_DirectorySeparator_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The handle is closed..
        /// </summary>
        internal static string Handle_Is_Closed {
            get {
                return ResourceManager.GetString("Handle_Is_Closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The handle is invalid..
        /// </summary>
        internal static string Handle_Is_Invalid {
            get {
                return ResourceManager.GetString("Handle_Is_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The handle is invalid. Win32Error: [{0}].
        /// </summary>
        internal static string Handle_Is_Invalid_Win32Error {
            get {
                return ResourceManager.GetString("Handle_Is_Invalid_Win32Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating hard-links on non-NTFS partitions is not supported..
        /// </summary>
        internal static string HardLinks_Not_Supported {
            get {
                return ResourceManager.GetString("HardLinks_Not_Supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal characters: [{0}] in path..
        /// </summary>
        internal static string Illegal_Characters_In_Path {
            get {
                return ResourceManager.GetString("Illegal_Characters_In_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to set an invalid file attribute failed..
        /// </summary>
        internal static string Invalid_File_Attribute {
            get {
                return ResourceManager.GetString("Invalid_File_Attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data present in the reparse point buffer is invalid.
        /// </summary>
        internal static string Invalid_Reparse_Data {
            get {
                return ResourceManager.GetString("Invalid_Reparse_Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid stream name..
        /// </summary>
        internal static string Invalid_Stream_Name {
            get {
                return ResourceManager.GetString("Invalid_Stream_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Subpath.
        /// </summary>
        internal static string Invalid_Subpath {
            get {
                return ResourceManager.GetString("Invalid_Subpath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid transaction request..
        /// </summary>
        internal static string Invalid_Transaction_Request {
            get {
                return ResourceManager.GetString("Invalid_Transaction_Request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be a drive letter: &quot;C&quot;, RootDir: &quot;C:\&quot; or UNC path: &quot;\\server\share&quot;.
        /// </summary>
        internal static string InvalidDriveLetterArgument {
            get {
                return ResourceManager.GetString("InvalidDriveLetterArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be a drive letter: &quot;C&quot;, &quot;C:&quot;  or RootDir: &quot;C:\&quot;.
        /// </summary>
        internal static string InvalidLogicalDriveArgument {
            get {
                return ResourceManager.GetString("InvalidLogicalDriveArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be a drive letter: &quot;C&quot;, &quot;C:\&quot; or Volume GUID..
        /// </summary>
        internal static string InvalidLogicalDriveVolumeArgument {
            get {
                return ResourceManager.GetString("InvalidLogicalDriveVolumeArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target directory of the directory junction must be on the same local drive..
        /// </summary>
        internal static string Junction_And_Target_Must_Be_On_The_Same_Drive {
            get {
                return ResourceManager.GetString("Junction_And_Target_Must_Be_On_The_Same_Drive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MoveOptions.CopyAllowed is not allowed when using the MoveOptions.DelayUntilReboot flag..
        /// </summary>
        internal static string MoveOptionsDelayUntilReboot_Not_Allowed_With_MoveOptionsCopyAllowed {
            get {
                return ResourceManager.GetString("MoveOptionsDelayUntilReboot_Not_Allowed_With_MoveOptionsCopyAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MoveOptions.DelayUntilReboot is not allowed when using a network path..
        /// </summary>
        internal static string MoveOptionsDelayUntilReboot_Not_Allowed_With_NetworkPath {
            get {
                return ResourceManager.GetString("MoveOptionsDelayUntilReboot_Not_Allowed_With_NetworkPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count cannot be negative..
        /// </summary>
        internal static string Negative_Count {
            get {
                return ResourceManager.GetString("Negative_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination offset cannot be negative..
        /// </summary>
        internal static string Negative_Destination_Offset {
            get {
                return ResourceManager.GetString("Negative_Destination_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length cannot be negative..
        /// </summary>
        internal static string Negative_Length {
            get {
                return ResourceManager.GetString("Negative_Length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock length cannot be negative..
        /// </summary>
        internal static string Negative_Lock_Length {
            get {
                return ResourceManager.GetString("Negative_Lock_Length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset cannot be negative..
        /// </summary>
        internal static string Negative_Offset {
            get {
                return ResourceManager.GetString("Negative_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network path is not allowed for directory junction: [{0}].
        /// </summary>
        internal static string Network_Path_Not_Allowed {
            get {
                return ResourceManager.GetString("Network_Path_Not_Allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No drive letters available..
        /// </summary>
        internal static string No_Drive_Letters_Available {
            get {
                return ResourceManager.GetString("No_Drive_Letters_Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream does not support seeking..
        /// </summary>
        internal static string No_Stream_Seeking_Support {
            get {
                return ResourceManager.GetString("No_Stream_Seeking_Support", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument is not a valid Volume GUID..
        /// </summary>
        internal static string Not_A_Valid_Guid {
            get {
                return ResourceManager.GetString("Not_A_Valid_Guid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path is a zero-length string or contains only white space..
        /// </summary>
        internal static string Path_Is_Zero_Length_Or_Only_White_Space {
            get {
                return ResourceManager.GetString("Path_Is_Zero_Length_Or_Only_White_Space", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Privilege name cannot be empty..
        /// </summary>
        internal static string Privilege_Name_Cannot_Be_Empty {
            get {
                return ResourceManager.GetString("Privilege_Name_Cannot_Be_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomplete header read..
        /// </summary>
        internal static string Read_Incomplete_Header {
            get {
                return ResourceManager.GetString("Read_Incomplete_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid security descriptor returned from system..
        /// </summary>
        internal static string Returned_Invalid_Security_Descriptor {
            get {
                return ResourceManager.GetString("Returned_Invalid_Security_Descriptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source offset and length outside the bounds of the array.
        /// </summary>
        internal static string Source_OffsetAndLength_Outside_Bounds {
            get {
                return ResourceManager.GetString("Source_OffsetAndLength_Outside_Bounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target directory is a file, not a directory: [{0}].
        /// </summary>
        internal static string Target_Directory_Is_A_File {
            get {
                return ResourceManager.GetString("Target_Directory_Is_A_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target file is a directory, not a file: [{0}].
        /// </summary>
        internal static string Target_File_Is_A_Directory {
            get {
                return ResourceManager.GetString("Target_File_Is_A_Directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction already aborted..
        /// </summary>
        internal static string Transaction_Already_Aborted {
            get {
                return ResourceManager.GetString("Transaction_Already_Aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction already committed..
        /// </summary>
        internal static string Transaction_Already_Committed {
            get {
                return ResourceManager.GetString("Transaction_Already_Committed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid transaction object..
        /// </summary>
        internal static string Transaction_Invalid {
            get {
                return ResourceManager.GetString("Transaction_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction not active..
        /// </summary>
        internal static string Transaction_Not_Active {
            get {
                return ResourceManager.GetString("Transaction_Not_Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transaction not requested..
        /// </summary>
        internal static string Transaction_Not_Requested {
            get {
                return ResourceManager.GetString("Transaction_Not_Requested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transactional conflict..
        /// </summary>
        internal static string Transactional_Conflict {
            get {
                return ResourceManager.GetString("Transactional_Conflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network share path should match the format: \\server\share.
        /// </summary>
        internal static string UNC_Path_Should_Match_Format {
            get {
                return ResourceManager.GetString("UNC_Path_Should_Match_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given path&apos;s format is not supported: [{0}].
        /// </summary>
        internal static string Unsupported_Path_Format {
            get {
                return ResourceManager.GetString("Unsupported_Path_Format", resourceCulture);
            }
        }
    }
}
